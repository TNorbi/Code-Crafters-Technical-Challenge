@using System.Timers
@using One_Time_Password_Web_Application.Data.AES
@using One_Time_Password_Web_Application.Data.Models.API_Responses
@using One_Time_Password_Web_Application.Data.Models.Login

<div class="modal fade show" style="display:block; background-color: rgba(10,10,10,.8);" aria-modal="true" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">@Title</h4>
                <button type="button" class="close" @onclick="@ModalCancel">&times;</button>
            </div>
            <div class="modal-body" style="margin:auto; padding:10px; text-align:center">
                <p>@Text</p>
                <h5 style="font-weight:bold; color:black">@OTP</h5>
                <input type="text" placeholder="Enter your OTP here" maxlength="@OTP.Length" @bind="InputOTP" />
            </div>
           <div class="modal-footer">
                <button @onclick = "onSubmit">Submit</button>
            </div>
        </div>
    </div>
</div>

@code{
    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public string Text { get; set; }

    [Parameter]
    public EventCallback<bool> OnClose { get; set; }

    [Parameter]
    public string OTP { get; set; }

    [Parameter]
    public int UserID { get; set; }

    [Parameter]
    public GenerateOTPResponse GenerateOTPResponse{ get; set; }

    private string InputOTP { get; set; }

    private Task ModalCancel(){
        return OnClose.InvokeAsync(false);
    }

    private async Task onSubmit(){
        HttpClient client = new HttpClient();
        VerifyOTPModel verifyOTPModel = new VerifyOTPModel {
                UserID = UserID,
                DateTime = DateTime.UtcNow,
                EnteredOTP = AesEncryptDecrypt.EncryptUsingCBC(InputOTP),
                ExpireDate = GenerateOTPResponse.Timestamp,
                OriginalOTP = GenerateOTPResponse.OTP!
            };

        var response = await client.PostAsJsonAsync("https://localhost:7181/api/User/verify-one-time-password", verifyOTPModel);

        var verifyOTPResponse = await response.Content.ReadFromJsonAsync<VerifyOTPResponse>();

        if (verifyOTPResponse != null){

            if (verifyOTPResponse.Code == 200){
                //succes !!!!
            }
            else if(verifyOTPResponse.Code == 300){
                //UserID missing
            }
            else if(verifyOTPResponse.Code == 301){
                //UserID negative
            }
            else if (verifyOTPResponse.Code == 302)
            {
                //Datetime missing
            }
            else if (verifyOTPResponse.Code == 303)
            {
                //Datetime is not valid
            }
            else if (verifyOTPResponse.Code == 304){
                // Entered OTP missing
            }
            else if (verifyOTPResponse.Code == 305){
                //ExpireDate is missing
            }
            else if (verifyOTPResponse.Code == 306){
                //ExpireDate is not valid
            }
            else if (verifyOTPResponse.Code == 307)
            {
                //OriginalOTP is missing
            }
            else{
                //exception
            }

        }
    }
}